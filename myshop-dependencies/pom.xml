<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.4.RELEASE</version>
  </parent>

  <groupId>com.myshop</groupId>
  <artifactId>myshop-dependencies</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <!--共同依赖管理是 pom-->
  <packaging>pom</packaging>


  <name>myshop-dependencies</name>
  <url>http://www.example.com</url>

  <repositories>
    <!--配置nexus公服-->
    <repository>
      <id>sonatype-nexus-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  <!--配置快照版私服-->
    <repository>
      <!--id必须和maven的setting中的server一致-->
      <id>nexus-snapshot</id>
      <name>nexus-snapshot</name>
      <url>http://192.168.47.128:8081/repository/maven-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <!--配置发行版私服-->
    <repository>
      <id>nexus-releases</id>
      <name>nexus-releases</name>
      <url>http://192.168.47.128:8081/repository/maven-releases/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>

    <repository>
      <id>nexus-public</id>
      <name>nexus-public</name>
      <url>http://192.168.47.128:8081/repository/maven-public/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>


    <!--spring的一定要添加，有可能spring存在快照版的包-->
    <repository>
      <id>spring-snapshots</id>
      <url>http://repo.spring.io/snapshot</url>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <url>http://repo.spring.io/milestone</url>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>nexus-snapshot</id>
      <name>nexus-snapshot</name>
      <url>http://192.168.47.128:8081/repository/maven-snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>nexus-releases</id>
      <name>nexus-releases</name>
      <url>http://192.168.47.128:8081/repository/maven-releases/</url>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
    <swagger2.version>2.9.2</swagger2.version>
    <lombok.version>1.18.6</lombok.version>
    <spring-boot-admin.version>2.1.4</spring-boot-admin.version>
    <zipkin.version>2.12.1</zipkin.version>
    <spring-boot-pagehelper.version>1.2.10</spring-boot-pagehelper.version>
    <tk-mybatis.version>4.0.4</tk-mybatis.version>
    <spring-boot-tk-mybatis.version>2.1.4</spring-boot-tk-mybatis.version>
    <jackson.version>2.12.6.1</jackson.version>
    <spring-boot-druid.version>1.1.9</spring-boot-druid.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Swagger2 Begin -->
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${swagger2.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${swagger2.version}</version>
      </dependency>
      <!-- Swagger2 End -->

      <!-- Lombok Begin -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <!-- Lombok End -->

      <!--spring-boot-start  begin-->
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-client</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-starter-server</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${spring-boot-druid.version}</version>
      </dependency>
      <!--spring-boot-start end-->

      <!-- zipkin  begin-->
      <dependency>
        <groupId>io.zipkin.java</groupId>
        <artifactId>zipkin-autoconfigure-ui</artifactId>
        <version>${zipkin.version}</version>
      </dependency>
      <!-- zipkin 服务类-->
      <dependency>
        <groupId>io.zipkin.java</groupId>
        <artifactId>zipkin-server</artifactId>
        <version>${zipkin.version}</version>
      </dependency>
      <!-- zipkin  end-->

      <!-- MySQL Begin -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
        <scope>runtime</scope>
      </dependency>
      <!-- MySQL Begin -->

      <!-- MyBatis Begin -->
      <dependency>
        <groupId>tk.mybatis</groupId>
        <artifactId>mapper</artifactId>
        <version>${tk-mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>tk.mybatis</groupId>
        <artifactId>mapper-spring-boot-starter</artifactId>
        <version>${spring-boot-tk-mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper-spring-boot-starter</artifactId>
        <version>${spring-boot-pagehelper.version}</version>
      </dependency>
      <!-- MyBatis End -->

      <!-- Hibernate Begin -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator.version}</version>
      </dependency>
      <!-- Hibernate End -->

      <!-- Json Begin -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <!-- Json End -->

      <!-- 解决 thymeleaf 模板引擎一定要执行严格的 html5 格式校验问题 -->
      <dependency>
        <groupId>net.sourceforge.nekohtml</groupId>
        <artifactId>nekohtml</artifactId>
        <version>${nekohtml.version}</version>
      </dependency>
    </dependencies>

  </dependencyManagement>



  <build>
    <plugins>
      <!-- 资源文件拷贝插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- Java 编译插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- 打包时跳过测试 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
    </plugins>

    <!--打包的资源文件配置,使用jar包打包时不会打包html等静态文件，配置之后就可以打包了-->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
  </build>


</project>
